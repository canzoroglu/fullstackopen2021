{"version":3,"sources":["Components/Filter.js","Components/ContactForm.js","Components/Contacts.js","Components/Notification.js","services/people.js","App.js","index.js"],"names":["Filter","filter","filterChange","onChange","value","ContactForm","addNew","changeName","changePhone","newName","newPhone","onSubmit","type","Contacts","persons","deletePerson","person","name","toLowerCase","includes","map","number","onClick","id","Notification","errorColor","msg","color","className","style","baseUrl","peopleServices","getPeople","axios","get","then","response","data","concat","createPerson","post","updatePerson","put","delete","App","useState","setPersons","setNewName","setNewPhone","setFilter","setMsg","useEffect","e","target","preventDefault","personAlreadyAdded","toLocaleLowerCase","length","window","confirm","setTimeout","catch","error","newPerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dd553ac.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({filter, filterChange}) => {\r\n    return (\r\n      <div>\r\n            filter: <input onChange={filterChange} value={filter}/>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Filter;","import React from \"react\";\r\n\r\nconst ContactForm = ({addNew, changeName, changePhone, newName, newPhone}) => {\r\n    return (\r\n      <div>\r\n        <h2>Add a new</h2>\r\n        <form onSubmit={addNew}>\r\n          <div>\r\n            name: <input onChange={changeName} value={newName}/>\r\n          </div>\r\n          <div>\r\n            phone: <input onChange={changePhone} value={newPhone}/>\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default ContactForm;","import React from \"react\";\r\n\r\nconst Contacts = ({persons, filter, deletePerson}) => {\r\n    return (\r\n      <div>\r\n        <h2>Numbers</h2>\r\n        {\r\n          persons.filter(person => person.name.toLowerCase().includes(filter))\r\n          .map(person => (\r\n          <p key={person.name}>\r\n            {person.name} {person.number}\r\n            <button onClick={() => deletePerson(person.id, person.name)}>Delete</button>\r\n          </p>))\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Contacts;","import React from \"react\";\r\n\r\nconst Notification = ({msg}) => {\r\n    let errorColor;\r\n    if (msg === null)\r\n        return \"\";\r\n    else\r\n        errorColor = {color:msg.includes(\"Error\") ? \"red\" : \"\"};\r\n    return (\r\n        <div className=\"added\" style={errorColor}>\r\n            {msg}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getPeople = () => axios.get(baseUrl).then(response => response.data.concat({\r\n    id: 10000,\r\n    name: 'Virus',\r\n    number:'0000000'\r\n  }));\r\n\r\nconst createPerson = person => axios.post(baseUrl, person).then(response => response.data);\r\n\r\nconst updatePerson = (id, person) => axios.put(`${baseUrl}/${id}`, person).then(response => response.data);\r\n\r\nconst deletePerson = id => axios.delete(`${baseUrl}/${id}`);\r\n\r\nconst peopleServices = {\r\n    getPeople,\r\n    createPerson,\r\n    updatePerson,\r\n    deletePerson,\r\n}\r\n\r\nexport default peopleServices;","import React, {useState, useEffect} from 'react';\r\nimport Filter from './Components/Filter';\r\nimport ContactForm from './Components/ContactForm';\r\nimport Contacts from './Components/Contacts';\r\nimport Notification from './Components/Notification';\r\nimport peopleServices from './services/people';\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newPhone, setNewPhone ] = useState('')\r\n  const [ filter, setFilter ] = useState('')\r\n  const [ msg, setMsg ] = useState(null)\r\n\r\n  useEffect(() => \r\n    peopleServices.getPeople()\r\n    .then(data => {\r\n      setPersons(data);\r\n    }), []);\r\n\r\n  const addNew = e => {\r\n    e.preventDefault();\r\n    const personAlreadyAdded = persons.filter(person => person.name.toLowerCase() === newName.toLocaleLowerCase()); \r\n    if(personAlreadyAdded.length > 0) {\r\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`))\r\n       {\r\n        peopleServices.updatePerson(personAlreadyAdded[0].id, {...personAlreadyAdded[0], number:newPhone})\r\n        .then(data => {\r\n          setPersons(persons.map(person => person.name.toLowerCase() === newName.toLowerCase() ? data : person))\r\n          setMsg(`${newName} is updated with a new number`);\r\n          setTimeout(() => setMsg(null), 5000);\r\n        })\r\n        .catch(error => {\r\n          setMsg(\r\n            `Error: ${error.response.data.error}`\r\n          )\r\n          setTimeout(() => {\r\n            setMsg(null)\r\n          }, 5000);\r\n          setPersons(persons => persons.filter(person => person.name !== newName));\r\n        });\r\n       }\r\n    }\r\n    else {\r\n      const newPerson = {name: newName, number: newPhone};\r\n      peopleServices.createPerson(newPerson)\r\n      .then(data => {\r\n        setPersons(persons.concat([data]));\r\n        setMsg(`${newName} is added`);\r\n        setTimeout(() => setMsg(null), 5000);\r\n      })\r\n      .catch(error => {\r\n        setMsg(\r\n          `Error: ${error.response.data.error}`\r\n        );\r\n        setTimeout(() => {\r\n          setMsg(null)\r\n        }, 5000);\r\n      });\r\n    }\r\n    setNewPhone(\"\");\r\n    setNewName(\"\");\r\n  }\r\n\r\n  const deletePerson = (id, name) => {\r\n    if(window.confirm(`Delete ${name} ?`))\r\n      peopleServices.deletePerson(id).then(() => {\r\n        setPersons(persons.filter(person => person.id !== id));\r\n        setMsg(`${name} is deleted`);\r\n        setTimeout(() => {\r\n          setMsg(null)\r\n        }, 5000);\r\n      })\r\n      .catch(error => {\r\n        setMsg(\r\n          `Error: '${name}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setMsg(null)\r\n        }, 5000);\r\n        setPersons(persons => persons.filter(person => person.id !== id));\r\n      });\r\n  }\r\n\r\n  const filterChange = e => setFilter(e.target.value.toLowerCase());\r\n  const changeName = e => setNewName(e.target.value);\r\n  const changePhone = e => setNewPhone(e.target.value);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification msg={msg} />\r\n      <Filter filter={filter} filterChange={filterChange} />\r\n      <ContactForm addNew={addNew} changeName={changeName} changePhone={changePhone} newName={newName} newPhone={newPhone} />\r\n      <Contacts persons={persons} filter={filter} deletePerson={deletePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}